[tox]
requires =
    tox>=4.11
env_list =
    pip-compile
    py311
    pre-commit
isolated_build = True
skipsdist = True

[testenv]
deps =
    -r{toxinidir}/requirements-dev.txt
    -r{toxinidir}/requirements.txt
setenv =
    file|.env.example
commands =
    mypy .
    coverage erase
    coverage run -m pytest {posargs:tests}
    coverage report -m --fail-under 100

[testenv:pre-commit]
skip_install = True
deps = pre-commit
commands =
    pre-commit install
    pre-commit run --all-files

[testenv:pip-compile]
deps = pip-tools
commands =
    pip-compile --allow-unsafe --strip-extras -q --generate-hashes -o requirements.txt requirements.in
    pip-compile --allow-unsafe --strip-extras -q --generate-hashes -o requirements-dev.txt requirements-dev.in

[testenv:pip-compile-upgrade]
deps = pip-tools
commands =
    pip-compile --allow-unsafe --strip-extras -q --generate-hashes --upgrade -o requirements.txt requirements.in
    pip-compile --allow-unsafe --strip-extras -q --generate-hashes --upgrade -o requirements-dev.txt requirements-dev.in

[testenv:local]
deps =
    -r{toxinidir}/requirements-local.txt
    pre-commit
setenv =
    file|.env.example
commands =
    mypy .
    coverage erase
    coverage run -m pytest {posargs:tests}
    coverage report -m --fail-under 100
commands_post =
    pre-commit install
    pre-commit run --all-files

[testenv:local-pip-compile]
deps = pip-tools
commands =
    pip-compile --allow-unsafe --strip-extras -q --upgrade -o requirements-local.txt -r requirements.in -r requirements-dev.in

[flake8]
max-line-length = 120
exclude =
    .git,
    __pycache__,
    .tox,
    venv*,
    .venv*,
    env*,
    migrations,
